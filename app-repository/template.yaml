AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters: 
  CloudWatchNameSpace: 
    Type: String
    Default: Desole
    Description: Namespace for CloudWatch Metrics 
  PinpointApplicationId: 
    Type: String
    Default: '' 
    Description: Pinpoint (Mobile Hub) Application ID. Leave blank if you do not want to log events to Pinpoint analytics
  CorsOrigin:
    Type: String
    Default: "'*'"
    Description: CORS Origin details
  PinpointEventName:
    Type: String
    Default: Error
    Description: The name for custom events logged to Pinpoint analytics 
  BucketExpiryDays:
    Type: String
    Default: ''
    Description: The number of days for how long do you want to keep the stored events  
  BucketEncryptionAlgorithm:
    Type: String
    Default: ''
    AllowedValues: 
      - ''
      - AES256
      - aws:kms
    Description: Enter empty, AES256, or aws:kms. Default is empty.
  BucketEncryptionKMSKey:
    Type: String
    Default: ''
    Description: The AWS:KMS Master key which is utilized only when the AWS:KMS bucket encryption is being used
Conditions:
    IsBucketExpiryDefined: !Not [ !Equals ['', !Ref BucketExpiryDays]]
    IsBucketEncryptionDefined: !Not [ !Equals ['', !Ref BucketEncryptionAlgorithm]]

Resources:
  CollectorApi:
    Type: AWS::Serverless::Function
    Properties:
      Handler: collector-api.handler
      Runtime: nodejs8.10
      Environment:
        Variables:
          TOPIC_ARN: !Ref CollectorTopic
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref CollectorTopic
      Events:
        ApiEndpointApi:
          Type: Api
          Properties:
            Path: /desole
            Method: POST
            RestApiId: !Ref CollectorApiGateway
        PostSentry:
          Type: Api
          Properties:
            Path: /sentry
            Method: POST
            RestApiId: !Ref CollectorApiGateway
  CollectorTopic: 
    Type: AWS::SNS::Topic
  S3Publisher:
    Type: AWS::Serverless::Function
    Properties:
      Handler: s3-publisher.handler
      Runtime: nodejs8.10
      Environment:
        Variables:
          BUCKET_NAME: !Ref CollectedEventsStorage
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 's3:PutObject'
              Resource: !Sub 'arn:aws:s3:::${CollectedEventsStorage}/*'
      Events:
        CollectorSubscribedTopic:
          Type: SNS
          Properties:
            Topic: !Ref CollectorTopic
  CloudwatchPublisher:
    Type: AWS::Serverless::Function
    Properties:
      Handler: cloudwatch-publisher.handler
      Runtime: nodejs8.10
      Environment:
        Variables:
          CLOUDWATCH_NAMESPACE: !Ref CloudWatchNameSpace
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 'cloudwatch:PutMetricData'
              Resource: '*'
      Events:
        CollectorSubscribedTopic:
          Type: SNS
          Properties:
            Topic: !Ref CollectorTopic
  PinpointPublisher:
    Type: AWS::Serverless::Function
    Properties:
      Handler: pinpoint-publisher.handler
      Runtime: nodejs8.10
      Environment:
        Variables:
          MOBILE_HUB_APPLICATION: !Ref PinpointApplicationId
          EVENT_NAME: !Ref PinpointEventName
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 'mobileanalytics:PutEvents'
              Resource: '*'
            - Effect: Allow
              Action: 'mobiletargeting:UpdateEndpoint'
              Resource: '*'
      Events:
        CollectorSubscribedTopic:
          Type: SNS
          Properties:
            Topic: !Ref CollectorTopic
  CollectedEventsStorage:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        !If
          - IsBucketEncryptionDefined
          - 
            ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: !Ref BucketEncryptionAlgorithm
                  KMSMasterKeyID: !Ref BucketEncryptionKMSKey
          - !Ref AWS::NoValue
      LifecycleConfiguration:
        !If 
          - IsBucketExpiryDefined
          - Rules:
            - ExpirationInDays: !Ref BucketExpiryDays
              Status: Enabled
          - !Ref AWS::NoValue
  CollectorApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: 'prod'
      Cors:
        AllowOrigin: !Ref CorsOrigin
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            Ref: AWS::StackName
        paths:
          /desole:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CollectorApi.Arn}/invocations
                responses: {}
          /sentry:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CollectorApi.Arn}/invocations
                responses: {}
Outputs:
  ApiUrl:
    Description: The URL of your API endpoint
    Value: !Sub "https://${CollectorApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${CollectorApiGateway.Stage}"
  S3BucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt [CollectedEventsStorage, DomainName]]]
    Description: The URL of your S3 Bucket